// Code generated by protoc-gen-go. DO NOT EDIT.
// source: proto/goclient.proto

package project2goclient

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Request struct {
	Str                  string   `protobuf:"bytes,1,opt,name=str,proto3" json:"str,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Request) Reset()         { *m = Request{} }
func (m *Request) String() string { return proto.CompactTextString(m) }
func (*Request) ProtoMessage()    {}
func (*Request) Descriptor() ([]byte, []int) {
	return fileDescriptor_17d3b1d2fceeb1f8, []int{0}
}

func (m *Request) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Request.Unmarshal(m, b)
}
func (m *Request) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Request.Marshal(b, m, deterministic)
}
func (m *Request) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Request.Merge(m, src)
}
func (m *Request) XXX_Size() int {
	return xxx_messageInfo_Request.Size(m)
}
func (m *Request) XXX_DiscardUnknown() {
	xxx_messageInfo_Request.DiscardUnknown(m)
}

var xxx_messageInfo_Request proto.InternalMessageInfo

func (m *Request) GetStr() string {
	if m != nil {
		return m.Str
	}
	return ""
}

type Response struct {
	Str                  string   `protobuf:"bytes,1,opt,name=str,proto3" json:"str,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Response) Reset()         { *m = Response{} }
func (m *Response) String() string { return proto.CompactTextString(m) }
func (*Response) ProtoMessage()    {}
func (*Response) Descriptor() ([]byte, []int) {
	return fileDescriptor_17d3b1d2fceeb1f8, []int{1}
}

func (m *Response) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Response.Unmarshal(m, b)
}
func (m *Response) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Response.Marshal(b, m, deterministic)
}
func (m *Response) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Response.Merge(m, src)
}
func (m *Response) XXX_Size() int {
	return xxx_messageInfo_Response.Size(m)
}
func (m *Response) XXX_DiscardUnknown() {
	xxx_messageInfo_Response.DiscardUnknown(m)
}

var xxx_messageInfo_Response proto.InternalMessageInfo

func (m *Response) GetStr() string {
	if m != nil {
		return m.Str
	}
	return ""
}

func init() {
	proto.RegisterType((*Request)(nil), "project2goclient.request")
	proto.RegisterType((*Response)(nil), "project2goclient.response")
}

func init() {
	proto.RegisterFile("proto/goclient.proto", fileDescriptor_17d3b1d2fceeb1f8)
}

var fileDescriptor_17d3b1d2fceeb1f8 = []byte{
	// 138 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x12, 0x29, 0x28, 0xca, 0x2f,
	0xc9, 0xd7, 0x4f, 0xcf, 0x4f, 0xce, 0xc9, 0x4c, 0xcd, 0x2b, 0xd1, 0x03, 0x73, 0x85, 0x04, 0x0a,
	0x8a, 0xf2, 0xb3, 0x52, 0x93, 0x4b, 0x8c, 0x60, 0xe2, 0x4a, 0xd2, 0x5c, 0xec, 0x45, 0xa9, 0x85,
	0xa5, 0xa9, 0xc5, 0x25, 0x42, 0x02, 0x5c, 0xcc, 0xc5, 0x25, 0x45, 0x12, 0x8c, 0x0a, 0x8c, 0x1a,
	0x9c, 0x41, 0x20, 0xa6, 0x92, 0x0c, 0x17, 0x47, 0x51, 0x6a, 0x71, 0x41, 0x7e, 0x5e, 0x71, 0x2a,
	0xa6, 0xac, 0x91, 0x3f, 0x17, 0x87, 0x7b, 0xbe, 0x33, 0xd8, 0x18, 0x21, 0x67, 0x2e, 0x8e, 0xe0,
	0xc4, 0x4a, 0x8f, 0xd4, 0x9c, 0x9c, 0x7c, 0x21, 0x49, 0x3d, 0x74, 0x5b, 0xf4, 0xa0, 0x56, 0x48,
	0x49, 0x61, 0x93, 0x82, 0x58, 0xa0, 0xc4, 0x90, 0xc4, 0x06, 0x76, 0xa4, 0x31, 0x20, 0x00, 0x00,
	0xff, 0xff, 0x0d, 0xdb, 0xe5, 0x6f, 0xbc, 0x00, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// GoClientClient is the client API for GoClient service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type GoClientClient interface {
	SayHello(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Response, error)
}

type goClientClient struct {
	cc grpc.ClientConnInterface
}

func NewGoClientClient(cc grpc.ClientConnInterface) GoClientClient {
	return &goClientClient{cc}
}

func (c *goClientClient) SayHello(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/project2goclient.GoClient/SayHello", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// GoClientServer is the server API for GoClient service.
type GoClientServer interface {
	SayHello(context.Context, *Request) (*Response, error)
}

// UnimplementedGoClientServer can be embedded to have forward compatible implementations.
type UnimplementedGoClientServer struct {
}

func (*UnimplementedGoClientServer) SayHello(ctx context.Context, req *Request) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SayHello not implemented")
}

func RegisterGoClientServer(s *grpc.Server, srv GoClientServer) {
	s.RegisterService(&_GoClient_serviceDesc, srv)
}

func _GoClient_SayHello_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GoClientServer).SayHello(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/project2goclient.GoClient/SayHello",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GoClientServer).SayHello(ctx, req.(*Request))
	}
	return interceptor(ctx, in, info, handler)
}

var _GoClient_serviceDesc = grpc.ServiceDesc{
	ServiceName: "project2goclient.GoClient",
	HandlerType: (*GoClientServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SayHello",
			Handler:    _GoClient_SayHello_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "proto/goclient.proto",
}
